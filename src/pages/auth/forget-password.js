/* eslint-disable react-hooks/rules-of-hooks */
import React, { useState, useContext } from "react";
import Head from "next/head";
import styles from "@/styles/SignIn.module.css";
import {
  Box,
  Button,
  Card,
  CardContent,
  Container,
  Grid,
  SvgIcon,
  TextField,
  Typography,
} from "@mui/material";
import EmailOutlinedIcon from "@mui/icons-material/EmailOutlined";
import { useRouter } from "next/router";
import toasterContext from "../../utils/context/tosterContext";
import axios from "axios";
import { Field, Form, Formik } from "formik";
import * as Yup from "yup";

const Index = () => {
  const route = useRouter();
  const [userDetails, setUserDetails] = useState({});
  const fireToasterContext = useContext(toasterContext);
  console.log("userDetails", userDetails);
  console.log("fireToasterContext", fireToasterContext);

  const handleChange = (evnet) => {
    setUserDetails({
      ...userDetails,
      [event.target.name]: event.target.value,
    });
  };

  const handleForgetPassword = async () => {
    const url = "http://localhost:8080/users/forgetPassword";
    await axios
      .post(url, userDetails)
      .then((response) => {
        console.log("Forgetpassowrrd response:", response);
        //  fireToasterContext.fireToasterHandler(true, `User is ${response.data}`);
        route.push("/auth/sign-in");
      })

      .catch((error) => {
        console.error("Error:", error);
        fireToasterContext.fireToasterHandler(
          false,
          error.response.data.message
        );
      });
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    handleForgetPassword();
  };

  return (
    <>
      <Head>
        <title>Forget Password</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={`${styles.main}`}>
        <div className={styles["rival-cms-container"]}>
          <Typography
            variant="body1"
            component="span"
            gutterBottom
            className={`${styles["link"]}`}
            style={{ color: "#2A4365" }}
          >
            Rival
          </Typography>
          <Typography
            variant="body1"
            component="span"
            gutterBottom
            className={`${styles["link"]}`}
            style={{ color: "#63B3ED" }}
          >
            CMS
          </Typography>
        </div>
        <Container
          maxWidth="sm"
          sx={{
            display: "flex",
            justifyContent: "center",
            alignItems: "center",
            flexDirection: "column",
          }}
        >
          <Card
            sx={{
              width: "550px",
            }}
          >
            <CardContent>
              <Container>
                <Formik
                  initialValues={{ email: "" }}
                  validationSchema={Yup.object({
                    email: Yup.string()
                      .email("Invalid email address")
                      .required("Email address is required"),
                  })}
                  onSubmit={(values, { setSubmitting }) => {
                    handleForgetPassword(values);
                    setSubmitting(false);
                  }}
                >
                  <Form>
                    <Grid container spacing={2}>
                      <Grid item xs={12}>
                        <Box
                          sx={{
                            display: "flex",
                            alignItems: "center",
                            mb: 2,
                          }}
                        >
                          <SvgIcon sx={{ mr: 2 }}>
                            <EmailOutlinedIcon color="#2A4365" />
                          </SvgIcon>
                          <Box>
                            <Typography
                              className={`${styles["email-address"]}`}
                            >
                              Email Address
                            </Typography>
                          </Box>
                        </Box>
                        <Field
                          required
                          fullWidth
                          name="email"
                          autoComplete="email"
                          as={TextField}
                          sx={{
                            backgroundColor: "#EDF2F7",
                            borderRadius: "5px",
                            height: "70px",
                            "& fieldset": {
                              border: "none",
                            },
                          }}
                        />
                      </Grid>

                      <Grid item xs={12} sx={{ my: 3 }}>
                        <Button
                          type="submit"
                          fullWidth
                          variant="contained"
                          sx={{
                            height: "61px",
                            backgroundColor: "#2A4365",
                            borderRadius: "5px",
                          }}
                        >
                          Get Code
                        </Button>
                      </Grid>
                    </Grid>
                  </Form>
                </Formik>
              </Container>
            </CardContent>
          </Card>
        </Container>
      </main>
    </>
  );
};

export default Index;
